server:
  port: 8888
spring:
  application:
    name: zuul-demo
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
zuul:
  ignored-services: '*'
  routes:
#    users: /myusers/**
#  除了users,其他全部忽略，请求/myusers/100 转发到 /users/100
    users:
      path: /ec1/**
      serviceId: EUREKA-CLIENT1
      sensitive-headers:
#     设置敏感头部信息为空
#      sensitive-headers: Cookie,Set-Cookie,Authorization
      #cookies为下游服务带来一些问题,sensitive-headers默认值

    #      stripPrefix: false
#      http://localhost:8888/ec1/home
#请求/myusers 转发到 users_service服务，path可以匹配任何风格,/myusers/*匹配一层，/myusers/**匹配多层
#      url: http://localhost:8080/
#简单Url路由不会被HystrixCommand执行，也不会会用robbin进行负载均衡
    rs:
      path: /rs/**
#      http://localhost:8888/rs/greeting
#      serviceId: rs
    forwardLocal:
      path: /forwardLocal/**
      url: forward:/home
#      跳转到本地，http://localhost:8888/forwardLocal/home,home为path参数，controller没有参数则没有home
    upload:
      path: /upload/**
      url: forward:/upload
  force-original-query-string-encoding: true
  decode-url: true
#    legacy:
#      path: /**
#      没有匹配到路由，直接匹配

hystrix:
  command:
    EUREKA-CLIENT1:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 5000
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000

EUREKA-CLIENT1:
  ribbon:
    NIWSServerListClassName: com.netflix.loadbalancer.ConfigurationBasedServerList
    listOfServers: http://localhost:8080
    ConnectTimeout: 5000
    ReadTimeout: 5000
    MaxTotalHttpConnections: 500
    MaxConnectionsPerHost: 100

ribbon:
  ConnectTimeout: 3000
  ReadTimeout: 60000
  restclient:
    enabled: true
#    使用apache http client代替ribbon
  eureka:
    enabled: false
#rs没有注册到eureka
#  okhttp:
#    enabled: true
#    使用apache http client代替ribbon

rs:
  ribbon:
    listOfServers: localhost:8090,localhost:9092,localhost:9999

management:
  endpoints:
    web:
      exposure:
        include: '*'
#        将所有的端点都暴露出来
